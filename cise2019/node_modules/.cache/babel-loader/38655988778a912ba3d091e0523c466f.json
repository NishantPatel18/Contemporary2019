{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Documents\\\\GitHub\\\\Contemporary2019\\\\cise2019\\\\src\\\\components\\\\Carousel.js\";\nimport React, { Component } from 'react';\nimport ImageSlide from './ImageSlide.js';\nimport LeftArrow from './LeftArrow.js';\nimport RightArrow from './RightArrow.js';\nimport Tomatoes from './images/Tomatoes.JPG';\nimport Apples from './images/AppleTrees.JPG';\nimport Strawberries from './images/StrawberryImage.JPG';\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goToPrevSlide = () => {\n      if (this.state.currentIndex === 0) return;\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex - 1,\n        translateValue: prevState.translateValue + this.slideWidth()\n      }));\n    };\n\n    this.goToNextSlide = () => {\n      // Exiting the method early if we are at the end of the images array.\n      // We also want to reset currentIndex and translateValue, so we return\n      // to the first image in the array.\n      if (this.state.currentIndex === this.state.images.length - 1) {\n        return this.setState({\n          currentIndex: 0,\n          translateValue: 0\n        });\n      } // This will not run if we met the if condition above\n\n\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1,\n        translateValue: prevState.translateValue + -this.slideWidth()\n      }));\n    };\n\n    this.slideWidth = () => {\n      return document.querySelector('.slide').clientWidth;\n    };\n\n    this.state = {\n      images: [Tomatoes, Apples, Strawberries],\n      currentIndex: 0,\n      translateValue: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-wrapper\",\n      style: {\n        transform: \"translateX(\".concat(this.state.translateValue, \"px)\"),\n        transition: 'transform ease-out 0.45s'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.images.map((image, i) => React.createElement(ImageSlide, {\n      key: i,\n      image: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(LeftArrow, {\n      goToPrevSlide: this.goToPrevSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(RightArrow, {\n      goToNextSlide: this.goToNextSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Nikhil\\Documents\\GitHub\\Contemporary2019\\cise2019\\src\\components\\Carousel.js"],"names":["React","Component","ImageSlide","LeftArrow","RightArrow","Tomatoes","Apples","Strawberries","HomePage","constructor","props","goToPrevSlide","state","currentIndex","setState","prevState","translateValue","slideWidth","goToNextSlide","images","length","document","querySelector","clientWidth","render","transform","transition","map","image","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,eAAe,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAChDQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,aAdmB,GAcH,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,YAAX,KAA4B,CAA/B,EACE;AAEF,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BF,QAAAA,YAAY,EAAEE,SAAS,CAACF,YAAV,GAAyB,CADb;AAE1BG,QAAAA,cAAc,EAAED,SAAS,CAACC,cAAV,GAA2B,KAAKC,UAAL;AAFjB,OAAL,CAAvB;AAID,KAtBkB;;AAAA,SAwBnBC,aAxBmB,GAwBH,MAAM;AACpB;AACA;AACA;AACA,UAAG,KAAKN,KAAL,CAAWC,YAAX,KAA4B,KAAKD,KAAL,CAAWO,MAAX,CAAkBC,MAAlB,GAA2B,CAA1D,EAA6D;AAC3D,eAAO,KAAKN,QAAL,CAAc;AACnBD,UAAAA,YAAY,EAAE,CADK;AAEnBG,UAAAA,cAAc,EAAE;AAFG,SAAd,CAAP;AAID,OATmB,CAWpB;;;AACA,WAAKF,QAAL,CAAcC,SAAS,KAAK;AAC1BF,QAAAA,YAAY,EAAEE,SAAS,CAACF,YAAV,GAAyB,CADb;AAE1BG,QAAAA,cAAc,EAAED,SAAS,CAACC,cAAV,GAA2B,CAAE,KAAKC,UAAL;AAFnB,OAAL,CAAvB;AAID,KAxCkB;;AAAA,SA0CnBA,UA1CmB,GA0CN,MAAM;AAChB,aAAOI,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,WAAxC;AACF,KA5CkB;;AAGjB,SAAKX,KAAL,GAAa;AACXO,MAAAA,MAAM,EAAE,CACNd,QADM,EAENC,MAFM,EAGNC,YAHM,CADG;AAMXM,MAAAA,YAAY,EAAE,CANH;AAOXG,MAAAA,cAAc,EAAE;AAPL,KAAb;AASD;;AAkCDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,uBAAgB,KAAKb,KAAL,CAAWI,cAA3B,QADJ;AAELU,QAAAA,UAAU,EAAE;AAFP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMM,KAAKd,KAAL,CAAWO,MAAX,CAAkBQ,GAAlB,CAAsB,CAACC,KAAD,EAAQC,CAAR,KACpB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,CAAjB;AAAoB,MAAA,KAAK,EAAED,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANN,CAFF,EAcE,oBAAC,SAAD;AACC,MAAA,aAAa,EAAE,KAAKjB,aADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAkBE,oBAAC,UAAD;AACC,MAAA,aAAa,EAAE,KAAKO,aADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF;AAwBD;;AAxE+C","sourcesContent":["import React, { Component } from 'react';\r\nimport ImageSlide from './ImageSlide.js';\r\nimport LeftArrow from './LeftArrow.js';\r\nimport RightArrow from './RightArrow.js';\r\nimport Tomatoes from './images/Tomatoes.JPG';\r\nimport Apples from './images/AppleTrees.JPG';\r\nimport Strawberries from './images/StrawberryImage.JPG';\r\n\r\nexport default class HomePage extends Component {\r\nconstructor(props) {\r\n  super(props)\r\n\r\n  this.state = {\r\n    images: [\r\n      Tomatoes,\r\n      Apples,\r\n      Strawberries\r\n    ],\r\n    currentIndex: 0,\r\n    translateValue: 0\r\n  }\r\n}\r\n\r\ngoToPrevSlide = () => {\r\n  if(this.state.currentIndex === 0)\r\n    return;\r\n  \r\n  this.setState(prevState => ({\r\n    currentIndex: prevState.currentIndex - 1,\r\n    translateValue: prevState.translateValue + this.slideWidth()\r\n  }))\r\n}\r\n\r\ngoToNextSlide = () => {\r\n  // Exiting the method early if we are at the end of the images array.\r\n  // We also want to reset currentIndex and translateValue, so we return\r\n  // to the first image in the array.\r\n  if(this.state.currentIndex === this.state.images.length - 1) {\r\n    return this.setState({\r\n      currentIndex: 0,\r\n      translateValue: 0\r\n    })\r\n  }\r\n  \r\n  // This will not run if we met the if condition above\r\n  this.setState(prevState => ({\r\n    currentIndex: prevState.currentIndex + 1,\r\n    translateValue: prevState.translateValue + -(this.slideWidth())\r\n  }));\r\n}\r\n\r\nslideWidth = () => {\r\n   return document.querySelector('.slide').clientWidth\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"slider\">\r\n\r\n      <div className=\"slider-wrapper\"\r\n        style={{\r\n          transform: `translateX(${this.state.translateValue}px)`,\r\n          transition: 'transform ease-out 0.45s'\r\n        }}>\r\n          {\r\n            this.state.images.map((image, i) => (\r\n              <ImageSlide key={i} image={image} />\r\n            ))\r\n          }\r\n      </div>\r\n\r\n      <LeftArrow\r\n       goToPrevSlide={this.goToPrevSlide}\r\n      />\r\n\r\n      <RightArrow\r\n       goToNextSlide={this.goToNextSlide}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}