{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Documents\\\\GitHub\\\\Contemporary2019\\\\cise2019\\\\src\\\\components\\\\AshTree.js\";\nimport React, { Component } from \"react\";\nexport default class AshTree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTrees = _ => {\n      fetch(\"http://localhost:3001/tree/\").then(response => response.json()).then(response => this.setState({\n        tree: response.data[this.props.match.params.treeId]\n      })).catch(err => console.error(err));\n    };\n\n    this.renderProduct = ({\n      tree_id,\n      tree_name,\n      tree_type,\n      tree_description\n    }) => React.createElement(\"div\", {\n      key: tree_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, tree_id, \" : \", tree_name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), \" \", tree_type, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), \" \", tree_description, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n\n    this.state = {\n      tree: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTrees();\n  }\n\n  render() {\n    const tree = this.state.tree;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, tree.map(this.renderProduct));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Nikhil\\Documents\\GitHub\\Contemporary2019\\cise2019\\src\\components\\AshTree.js"],"names":["React","Component","AshTree","constructor","props","getTrees","_","fetch","then","response","json","setState","tree","data","match","params","treeId","catch","err","console","error","renderProduct","tree_id","tree_name","tree_type","tree_description","state","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC7CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,QAVmB,GAURC,CAAC,IAAI;AACdC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEH,QAAQ,CAACI,IAAT,CAAc,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBC,MAAtC;AAAR,OAAd,CAFpB,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHhB;AAID,KAfkB;;AAAA,SAkBnBG,aAlBmB,GAkBH,CAAC;AAAEC,MAAAA,OAAF;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA,SAAvB;AAAkCC,MAAAA;AAAlC,KAAD,KACd;AAAK,MAAA,GAAG,EAAEH,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,SACeC,SADf,OAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,OACiCC,SADjC,OAC4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5C,OACmDC,gBADnD,EACoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpE,CAnBiB;;AAEjB,SAAKC,KAAL,GAAa;AACXd,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDe,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,QAAL;AACD;;AAeDuB,EAAAA,MAAM,GAAG;AAAA,UACChB,IADD,GACU,KAAKc,KADf,CACCd,IADD;AAEP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACiB,GAAL,CAAS,KAAKR,aAAd,CAAN,CAAP;AACD;;AA5B4C","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class AshTree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tree: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTrees();\r\n  }\r\n  getTrees = _ => {\r\n    fetch(\"http://localhost:3001/tree/\")\r\n      .then(response => response.json())\r\n      .then(response => this.setState({ tree: response.data[this.props.match.params.treeId] }))\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n//   edit this part\r\n  renderProduct = ({ tree_id , tree_name, tree_type, tree_description }) => (\r\n    <div key={tree_id}>\r\n      {tree_id} : {tree_name} <br/> {tree_type} <br/> {tree_description}<br/>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { tree } = this.state;\r\n    return <div>{tree.map(this.renderProduct) }</div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}